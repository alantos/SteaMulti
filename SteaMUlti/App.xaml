<Application x:Class="SteaMUlti.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:v="clr-namespace:SteaMUlti.Views"
			 xmlns:s="clr-namespace:System;assembly=mscorlib"
			 StartupUri="Views\Main.xaml">
	<Application.Resources>
		
		<Style x:Key="DetailsStackPanel">
			<Setter Property="Control.Margin" Value="20" />
		</Style>

		<Style TargetType="Image">
			<Setter Property="SnapsToDevicePixels" Value="True" />
		</Style>

		<!--@@@@@@@@@@@@@@@@@@@@@@@@ TextBlock Styles @@@@@@@@@@@@@@@@@@@@@@@@-->

		<Style TargetType="{x:Type TextBlock}">
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="Foreground" Value="#FFa6a4a1" />
		</Style>

		<Style x:Key="DetailsPanelTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
			<Setter Property="HorizontalAlignment" Value="Right" />
			<Setter Property="Margin" Value="0 0 10 0" />
		</Style>

		<Style x:Key="AccountsListBoxTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="Margin" Value="20 12 0 0" />
			<Setter Property="FontSize" Value="11" />
		</Style>
		
		<Style x:Key="GamesIsInstalledTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
			<Setter Property="HorizontalAlignment" Value="Right" />
			<Setter Property="Margin" Value="0 0 20 0" />
			<Setter Property="FontSize" Value="12" />
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="Foreground" Value="#FFCD0000"/>
			<Setter Property="Effect">
				<Setter.Value>
					<DropShadowEffect ShadowDepth="0"
										  Color="Red"
										  Opacity="1"
										  BlurRadius="10"/>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="AccountsSmallListBoxTextBlockTitle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="Margin" Value="0 20 0 10" />
			<Setter Property="FontSize" Value="14" />
			<!--<Setter Property="LayoutTransform">
				<Setter.Value>
					<TransformGroup>
						<RotateTransform Angle="-90"/>
					</TransformGroup>
				</Setter.Value>
			</Setter>-->
		</Style>

		<Style x:Key="AccountsListBoxTextBlockGameCount" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="Margin" Value="4 12 0 0" />
			<Setter Property="FontSize" Value="11" />
		</Style>

		<Style x:Key="AccountsListBoxTextBlockTitle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="Margin" Value="10 10 0 0" />
			<Setter Property="FontSize" Value="14" />
		</Style>

		<Style x:Key="AccountsListBoxTextBlockWarning" TargetType="TextBlock">
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="FontSize" Value="8"/>
			<Setter Property="Foreground" Value="#FFAE5353" />

			<Style.Triggers>
				<EventTrigger RoutedEvent="Loaded">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Opacity"
											 From="1"
											 To="0"
											 Duration="0:0:0.4"
											 AutoReverse="True"
											 RepeatBehavior="Forever"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="GamesListBoxTextBlockTitle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="FontSize" Value="18" />
			<Setter Property="TextWrapping" Value="Wrap"/>
		</Style>

		<!--@@@@@@@@@@@@@@@@@@@@@@@@ TextBox Styles @@@@@@@@@@@@@@@@@@@@@@@@-->

		<Style TargetType="{x:Type TextBox}">
			<Setter Property="Height" Value="30" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="Background" Value="#FF383635" />
			<Setter Property="BorderBrush" Value="#FF706d69" />
			<Setter Property="Foreground" Value="#FFd1cfcd" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Padding" Value="7 0 0 0" />
		</Style>

		<Style TargetType="{x:Type PasswordBox}">
			<Setter Property="Height" Value="30" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="Background" Value="#FF383635" />
			<Setter Property="BorderBrush" Value="#FF706d69" />
			<Setter Property="Foreground" Value="#FFd1cfcd" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Padding" Value="7 0 0 0" />
		</Style>

		<!--@@@@@@@@@@@@@@@@@@@@@@@@ ComboBox Styles @@@@@@@@@@@@@@@@@@@@@@@@-->

		<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<Border x:Name="Border" Grid.ColumnSpan="2" BorderThickness="1"
						Background="#FF383635" BorderBrush="#FF706d69"/>
				<Border Grid.Column="0" Margin="1" Background="#FF383635" 
						BorderBrush="#FF706d69" BorderThickness="0,0,1,0" />
				<Path x:Name="Arrow" Grid.Column="1" Fill="#FFd1cfcd" HorizontalAlignment="Center"
					  VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="ToggleButton.IsMouseOver" Value="true">
					<Setter TargetName="Border" Property="Background" Value="#FF4B4B4A" />
				</Trigger>
				<Trigger Property="ToggleButton.IsChecked" Value="true">
					<Setter TargetName="Border" Property="Background" Value="#FF252525" />
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter TargetName="Border" Property="Background" Value="#FF383635" />
					<Setter TargetName="Border" Property="BorderBrush" Value="#FF706d69" />
					<Setter Property="Foreground" Value="#FFd1cfcd"/>
					<Setter TargetName="Arrow" Property="Fill" Value="#FFd1cfcd" />
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
			<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
		</ControlTemplate>

		<Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="MinWidth" Value="120"/>
			<Setter Property="MinHeight" Value="20"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBox">
						<Grid>
							<ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}"
										  Grid.Column="2" Focusable="false" ClickMode="Press"
										  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
							</ToggleButton>
							<ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
											  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
											  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="10,3,23,3"
											  VerticalAlignment="Center" HorizontalAlignment="Left" />
							<TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" 
									 HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,3,23,3" Focusable="True" 
									 Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
							<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" 
								   Focusable="False" PopupAnimation="Slide">
								<Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
									  MaxHeight="{TemplateBinding MaxDropDownHeight}">
									<Border x:Name="DropDownBorder" Background="#FF383635" BorderThickness="1,0,1,1" BorderBrush="#FF706d69"/>
									<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#FFd1cfcd"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
							<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
								<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
								<Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEditable" Value="true">
								<Setter Property="IsTabStop" Value="false"/>
								<Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
								<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
			</Style.Triggers>
		</Style>

		<Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBoxItem">
						<Border Name="Border" Padding="2" SnapsToDevicePixels="true">
							<ContentPresenter Margin="8,0,0,0" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsHighlighted" Value="true">
								<Setter TargetName="Border" Property="Background" Value="#FF4B4B4B"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="Black"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--@@@@@@@@@@@@@@@@@@@@@@@@ Buttons Styles @@@@@@@@@@@@@@@@@@@@@@@@-->

		<Style x:Key="ImageButton" TargetType="{x:Type Button}">
			<Setter Property="Height" Value="40" />
			<Setter Property="Width" Value="40" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="Cursor" Value="Arrow"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ImageTextButton" TargetType="{x:Type Button}">
			<Setter Property="Height" Value="35" />
			<Setter Property="HorizontalAlignment" Value="Right" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="Cursor" Value="Arrow"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="Border" Background="#06FFFFFF" Padding="5 0 5 0">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
						</Border>

						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#12FFFFFF" />
							</Trigger>

							<Trigger Property="IsPressed" Value="True">
								<Setter TargetName="Border" Property="Background" Value="#01FFFFFF" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="UserControlButton" TargetType="{x:Type Button}">
			<Setter Property="Height" Value="auto" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="Cursor" Value="Arrow"/>
			<Setter Property="Margin" Value="0 10 0 0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="Border" BorderThickness="1" Padding="10 5" Margin="5" BorderBrush="#FF706d69">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FF5c5956" Offset="0"/>
									<GradientStop Color="#FF4a4846" Offset="1"/>
								</LinearGradientBrush>
							</Border.Background>

							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="#FFe5e2df"/>

						</Border>

						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Border" Property="BorderBrush" Value="#FF99938d" />
								<Setter TargetName="Border" Property="Background">
									<Setter.Value>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#FF696663" Offset="0"/>
											<GradientStop Color="#FF4b4947" Offset="1"/>
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
							</Trigger>

							<Trigger Property="IsPressed" Value="True">
								<Setter TargetName="Border" Property="BorderBrush" Value="#FF706d69" />
								<Setter TargetName="Border" Property="Background">
									<Setter.Value>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#FF383635" Offset="0"/>
											<GradientStop Color="#FF494745" Offset="1"/>
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
							</Trigger>

							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="Border" Property="BorderBrush" Value="#FF706d69" />
								<Setter TargetName="Border" Property="Background" Value="#FF383635" />

							</Trigger>

						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--@@@@@@@@@@@@@@@@@@@@@@@@ Panel Styles @@@@@@@@@@@@@@@@@@@@@@@@-->

		<!--@@@@@@@@@@@@@@@@@@@@@@@@ ListBox Styles @@@@@@@@@@@@@@@@@@@@@@@@-->

		<!--<Style x:Key="AccountListBoxStyle" TargetType="ListBox">
			<Setter Property="ScrollViewer."
		</Style>-->

		<Style x:Key="AccountListBoxItem" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Margin" Value="0 0 0 10" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="OverridesDefaultStyle" Value="true" />
			<!--<Setter Property="CacheMode">
				<Setter.Value>
					<BitmapCache EnableClearType="False"
								 RenderAtScale="1"
								 SnapsToDevicePixels="True"/>
				</Setter.Value>
			</Setter>-->
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBoxItem">

						<Border Name="Border" BorderThickness="1" BorderBrush="Black" Background="#FF3C3B3A">
							<ContentPresenter />
						</Border>

						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="Border" Property="BorderBrush" Value="#FF706d69" />
								<Setter TargetName="Border" Property="Background" Value="#FF42403F" />
							</Trigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding Path=Duplicate}" Value="True"/>
									<Condition Binding="{Binding ElementName=MainWindow, Path=DataContext.settings.HideDuplicates}" Value="True"/>
								</MultiDataTrigger.Conditions>
								<MultiDataTrigger.Setters>
									<Setter TargetName="Border" Property="Visibility" Value="Collapsed"/>
									<Setter Property="Margin" Value="0"/>
								</MultiDataTrigger.Setters>
							</MultiDataTrigger>
							<!--<DataTrigger Binding="{Binding Path=Duplicate}" Value="True">
								<Setter TargetName="Border" Property="Visibility" Value="Collapsed"/>
								<Setter Property="Margin" Value="0"/>
							</DataTrigger>-->
						</ControlTemplate.Triggers>

					</ControlTemplate>
				</Setter.Value>
			</Setter>

			<Setter Property="RenderTransform">
				<Setter.Value>
					<ScaleTransform ScaleX="1" CenterX="195" ScaleY="1" CenterY="60"/>
				</Setter.Value>
			</Setter>

			<Style.Triggers>
				<EventTrigger RoutedEvent="Selected">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
											 From="1"
											 To="0.98"
											 AutoReverse="True"
											 BeginTime="0:0:0"
											 Duration="0:0:0.06"/>
							<DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
											 From="1"
											 To="0.98"
											 AutoReverse="True"
											 BeginTime="0:0:0"
											 Duration="0:0:0.06"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Style.Triggers>
		</Style>

		<Style x:Key="AccountSmallListBoxStyle" TargetType="ListBox">
			<!--<Border BorderBrush="{StaticResource Splitter}" BorderThickness="0 0 1 0" />-->
		</Style>

		<!-- Scrollbar -->

		<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Border Background="Transparent" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border Background="#FF4F4E4D" Width="8" Margin="8 0 0 0" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
			<Grid >
				<Grid.RowDefinitions>
					<RowDefinition Height="0.00001*"/>
				</Grid.RowDefinitions>
				<Border
					Background="Transparent" />
				<Track 
					Name="PART_Track"
					IsDirectionReversed="true">
					<Track.DecreaseRepeatButton>
						<RepeatButton 
							Style="{StaticResource ScrollBarPageButton}"
							Command="ScrollBar.PageUpCommand" />
					</Track.DecreaseRepeatButton>
					<Track.Thumb>
						<Thumb 
							Style="{StaticResource ScrollBarThumb}" 
							Margin="1 0 1 0"  
							Background="Transparent" />
					</Track.Thumb>
					<Track.IncreaseRepeatButton>
						<RepeatButton 
							Style="{StaticResource ScrollBarPageButton}"
							Command="ScrollBar.PageDownCommand" />
					</Track.IncreaseRepeatButton>
				</Track>
			</Grid>
		</ControlTemplate>

		<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Vertical">
					<Setter Property="Width" Value="18"/>
					<Setter Property="Height" Value="Auto" />
					<Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<!--@@@@@@@@@@@@@@@@@@@@@@@@ Brushes & Colors @@@@@@@@@@@@@@@@@@@@@@@@-->

		<SolidColorBrush x:Key="MainBackground" Color="#FF383635" />
		<SolidColorBrush x:Key="Splitter" Color="#FF585553" />
		<SolidColorBrush x:Key="MainBorder" Color="#FF000000" />
		<SolidColorBrush x:Key="ControlsBrush" Color="#FF939393" />
		<SolidColorBrush x:Key="HighlightedItem" Color="#FF494949"/>

		<LinearGradientBrush x:Key="TitleBar" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#FF595553" Offset="0"/>
			<GradientStop Color="#FF3A3837" Offset="1"/>
		</LinearGradientBrush>
		
		<!--@@@@@@@@@@@@@@@@@@@@@@@@ ContexMenu Styles @@@@@@@@@@@@@@@@@@@@@@@@-->

		<Style TargetType="ContextMenu">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
			<Setter Property="HasDropShadow" Value="True"/>
			<Setter Property="MinWidth" Value="150"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ContextMenu">
						<Border Name="Border" Background="#FF383635" BorderBrush="#FF131313" BorderThickness="1" >
							<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="HasDropShadow" Value="true">
								<Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
			<Setter Property="Height" Value="1" />
			<Setter Property="Margin" Value="0,4,0,4" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Separator}">
						<Border BorderThickness="1" BorderBrush="#FF6E6E6E"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- TopLevelHeader -->
		<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
			<Border x:Name="Border">
				<Grid>
					<ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsHighlighted" Value="true">
					<Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
					<Setter Property="Background" TargetName="Border" Value="{StaticResource HighlightedItem}">
						<!--<Setter.Value>
							<LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
								<LinearGradientBrush.GradientStops>
									<GradientStopCollection>
										<GradientStop Color="#FF383635" />
										<GradientStop Color="#FF383635" Offset="1.0" />
									</GradientStopCollection>
								</LinearGradientBrush.GradientStops>
							</LinearGradientBrush>
						</Setter.Value>-->
					</Setter>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Foreground">
						<Setter.Value>
							<SolidColorBrush Color="Red" />
						</Setter.Value>
					</Setter>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<!-- TopLevelItem -->
		<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
			<Border x:Name="Border">
				<Grid>
					<ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsHighlighted" Value="true">
					<Setter Property="Background" TargetName="Border" Value="{StaticResource HighlightedItem}">
						<!--<Setter.Value>
							<LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
								<LinearGradientBrush.GradientStops>
									<GradientStopCollection>
										<GradientStop Color="#FF383635" />
										<GradientStop Color="#FF383635"
                              Offset="1.0" />
									</GradientStopCollection>
								</LinearGradientBrush.GradientStops>
							</LinearGradientBrush>

						</Setter.Value>-->
					</Setter>
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Foreground">
						<Setter.Value>
							<SolidColorBrush Color="Red" />
						</Setter.Value>
					</Setter>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<!-- SubmenuItem -->
		<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
			<Border x:Name="Border" BorderThickness="1" Height="30">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
						<ColumnDefinition Width="13" />
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
					<Border x:Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" BorderThickness="1">
						<Border.BorderBrush>
							<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
								<LinearGradientBrush.GradientStops>
									<GradientStopCollection>
										<GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
										<GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
									</GradientStopCollection>
								</LinearGradientBrush.GradientStops>
							</LinearGradientBrush>

						</Border.BorderBrush>
						<Border.Background>
							<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
								<LinearGradientBrush.GradientStops>
									<GradientStopCollection>
										<GradientStop Color="{DynamicResource ControlLightColor}" />
										<GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
									</GradientStopCollection>
								</LinearGradientBrush.GradientStops>
							</LinearGradientBrush>
						</Border.Background>
						<Path x:Name="CheckMark" Width="7" Height="7" Visibility="Hidden" SnapsToDevicePixels="False" 
							  StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0">
							<Path.Stroke>
								<SolidColorBrush Color="{DynamicResource GlyphColor}" />
							</Path.Stroke>
						</Path>
					</Border>
					<ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
					<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" 
							   Margin="5,2,0,2" DockPanel.Dock="Right" />
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="ButtonBase.Command" Value="{x:Null}" />
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
				</Trigger>
				<Trigger Property="IsChecked" Value="true">
					<Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
				</Trigger>
				<Trigger Property="IsCheckable" Value="true">
					<Setter TargetName="Check" Property="Visibility" Value="Visible" />
					<Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
				</Trigger>
				<Trigger Property="IsHighlighted" Value="true">
					<Setter Property="Background" TargetName="Border" Value="{StaticResource HighlightedItem}">
						<!--<Setter.Value>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="Transparent" Offset="0" />
								<GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="1" />
							</LinearGradientBrush>
						</Setter.Value>-->
					</Setter>
					<Setter Property="BorderBrush" TargetName="Border">
						<Setter.Value>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0" />
								<GradientStop Color="Transparent" Offset="1" />
							</LinearGradientBrush>
						</Setter.Value>
					</Setter>
				</Trigger>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Foreground">
						<Setter.Value>
							<SolidColorBrush Color="#FFC3C3C3" />
						</Setter.Value>
					</Setter>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
			<Border x:Name="Border" BorderThickness="1">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"
                          SharedSizeGroup="Icon" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
						<ColumnDefinition Width="13" />
					</Grid.ColumnDefinitions>
					<ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon" />
					<ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" />
					<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" 
							   Margin="5,2,2,2" DockPanel.Dock="Right" />
					<Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z">
						<Path.Fill>
							<SolidColorBrush Color="{DynamicResource GlyphColor}" />
						</Path.Fill>
					</Path>
					
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="Icon" Value="{x:Null}">
					<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
				</Trigger>
				<Trigger Property="IsHighlighted" Value="true">
					<Setter Property="Background" TargetName="Border" Value="{StaticResource HighlightedItem}">
						<!--<Setter.Value>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="Transparent" Offset="0" />
								<GradientStop Color="{DynamicResource ControlMouseOverColor}" Offset="1" />
							</LinearGradientBrush>
						</Setter.Value>-->
					</Setter>
					<Setter Property="BorderBrush" TargetName="Border">
						<Setter.Value>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0" />
								<GradientStop Color="Transparent" Offset="1" />
							</LinearGradientBrush>
						</Setter.Value>
					</Setter>
				</Trigger>
				
			</ControlTemplate.Triggers>
		</ControlTemplate>

		<!-- MenuItem Style -->
		<Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Style.Triggers>
				<Trigger Property="Role" Value="TopLevelHeader">
					<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
					<Setter Property="Grid.IsSharedSizeScope" Value="true" />
				</Trigger>
				<Trigger Property="Role" Value="TopLevelItem">
					<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
				</Trigger>
				<Trigger Property="Role" Value="SubmenuHeader">
					<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
				</Trigger>
				<Trigger Property="Role" Value="SubmenuItem">
					<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
				</Trigger>
			</Style.Triggers>
		</Style>
		
		<s:Boolean x:Key="TRUE">True</s:Boolean>
		<s:Boolean x:Key="FALSE">False</s:Boolean>

	</Application.Resources>
</Application>
